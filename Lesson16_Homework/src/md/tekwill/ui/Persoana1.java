/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package md.tekwill.ui;

import md.tekwill.model.Persoana;
import md.tekwill.service.PersoanaServiceImpl;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class Persoana1 extends javax.swing.JFrame {

    PersoanaServiceImpl service = new PersoanaServiceImpl();

    /**
     * Creates new form Persoana1
     */
    public Persoana1() {
        initComponents();
//        service = new PersoanaService();
//        Persoana persoana1 = new Persoana("Ion", "Bostan");
//        Persoana persoana2 = new Persoana("ZZ", "AA");
//        service.create(persoana1);
//        service.create(persoana2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        numeJText = new javax.swing.JTextField();
        prenumeJText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        createButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        idJText = new javax.swing.JTextField();
        findButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelPersoane = new javax.swing.JTable();
        showPersons = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Nume");

        numeJText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numeJTextActionPerformed(evt);
            }
        });

        prenumeJText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prenumeJTextActionPerformed(evt);
            }
        });

        jLabel2.setText("Prenume");

        createButton.setText("Creare");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Șterge");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Id");

        idJText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idJTextActionPerformed(evt);
            }
        });

        findButton.setText("Caută");
        findButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findButtonActionPerformed(evt);
            }
        });

        tabelPersoane.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Id", "Nume", "Prenume"
            }
        ));
        jScrollPane1.setViewportView(tabelPersoane);

        showPersons.setText("Printează");
        showPersons.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showPersonsActionPerformed(evt);
            }
        });

        updateButton.setText("Reînnoiește");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        deleteButton1.setText("Șterge din tabel");
        deleteButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(deleteButton1)
                        .addComponent(showPersons)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(numeJText, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(prenumeJText, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(idJText, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(24, 24, 24)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(createButton)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(findButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(deleteButton, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(updateButton, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(numeJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(prenumeJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(deleteButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(idJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(findButton)
                        .addComponent(updateButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showPersons)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deleteButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void numeJTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numeJTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numeJTextActionPerformed

    private void prenumeJTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prenumeJTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prenumeJTextActionPerformed

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
        if ((!numeJText.getText().equals("")) && ((!prenumeJText.getText().equals("")))) {
            Persoana p = new Persoana(numeJText.getText(), prenumeJText.getText());
            if (service.create(p) == null) {
                JOptionPane.showMessageDialog(null, "Dimensiune maximă date atinsă");
            }
        } else
            JOptionPane.showMessageDialog(null, "Nu este completată informația");
    }//GEN-LAST:event_createButtonActionPerformed

    private void idJTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idJTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idJTextActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        DefaultTableModel model = (DefaultTableModel) tabelPersoane.getModel();
        model.setRowCount(0);
    }//GEN-LAST:event_formWindowOpened

    private void showPersonsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showPersonsActionPerformed
        service.printeazaToatePersoanele(tabelPersoane);
    }//GEN-LAST:event_showPersonsActionPerformed

    private void findButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findButtonActionPerformed
        Persoana p = service.read(Integer.parseInt(idJText.getText()));
        if (p == null)
            JOptionPane.showMessageDialog(null, "Persoana cu id = " + idJText.getText() + " nu a fost găsită");
        else {
            numeJText.setText(p.getNume());
            prenumeJText.setText(p.getPreNume());
            //idJText.setText(String.valueOf(p.getId()));
        }
    }//GEN-LAST:event_findButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        if ((!numeJText.getText().equals("")) && ((!prenumeJText.getText().equals("")))
                && (!idJText.getText().equals(""))) {
            if (service.update(Integer.parseInt(idJText.getText()), numeJText.getText(), prenumeJText.getText())) {
                JOptionPane.showMessageDialog(null, "Informația a fost reînnoită");
            } else {
                JOptionPane.showMessageDialog(null, "Nu s-a găsit persoana");
            }
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        Persoana p = service.read(Integer.parseInt(idJText.getText()));
        if (p == null)
            JOptionPane.showMessageDialog(null, "Persoana cu id = " + idJText.getText() + " nu a fost găsită");
        else {
            if (service.delete(Integer.parseInt(idJText.getText()))) {
                JOptionPane.showMessageDialog(null, "Persoana cu id = " + idJText.getText() + " a fost eliminată");
            } else {
                JOptionPane.showMessageDialog(null, "Nu s-a eliminat persoana din motive necunoscute");
            }
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void deleteButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButton1ActionPerformed
        int i = tabelPersoane.getSelectedRow();
        if (i >= 0) {
            DefaultTableModel model = (DefaultTableModel) tabelPersoane.getModel();
            int id = (int) model.getValueAt(i, 0);

            Persoana p = service.read(id);
            if (p == null) {
                JOptionPane.showMessageDialog(null, "Persoana cu id = " + idJText.getText() + " nu a fost găsită");
            } else {
                if (service.delete(id)) {
                    JOptionPane.showMessageDialog(null, "Persoana cu id = " + id + " a fost eliminată");
                } else {
                    JOptionPane.showMessageDialog(null, "Nu s-a eliminat persoana");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Nu este selectat rândul în tabel");
        }
    }//GEN-LAST:event_deleteButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Persoana1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Persoana1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Persoana1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Persoana1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Persoana1().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton deleteButton1;
    private javax.swing.JButton findButton;
    private javax.swing.JTextField idJText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField numeJText;
    private javax.swing.JTextField prenumeJText;
    private javax.swing.JButton showPersons;
    private javax.swing.JTable tabelPersoane;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
